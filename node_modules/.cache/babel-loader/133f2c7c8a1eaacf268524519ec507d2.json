{"ast":null,"code":"var _jsxFileName = \"C:\\\\React projects\\\\ASSIGNMENT\\\\01-starting-setup\\\\src\\\\components\\\\TableRow.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableRow = props => {\n  _s();\n\n  const tableRow = useMemo(props.tableRow, [props.tableRow]);\n  const [batch, setBatch] = useState(\"ALL\");\n  const newdata = [];\n\n  for (const key in tableRow) {\n    if (key !== 'name') {\n      newdata.push(key);\n    }\n  }\n\n  const selectChangeHandler = event => {\n    setBatch(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          width: '90px',\n          padding: '3px',\n          background: 'lightgrey'\n        },\n        onChange: selectChangeHandler,\n        value: batch,\n        children: newdata.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: data\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow[batch]['stock']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow[batch]['deal']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow[batch]['free']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow[batch]['mrp']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow[batch]['rate']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: tableRow[batch]['exp']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TableRow, \"Lzg8ENt5sjAduwGu96n4HDSkNlU=\");\n\n_c = TableRow;\nexport default TableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"names":["useState","useMemo","TableRow","props","tableRow","batch","setBatch","newdata","key","push","selectChangeHandler","event","target","value","name","width","padding","background","map","data","Math","random"],"sources":["C:/React projects/ASSIGNMENT/01-starting-setup/src/components/TableRow.js"],"sourcesContent":["import { useState, useMemo} from \"react\";\r\nconst TableRow = (props) =>{\r\n    const tableRow =useMemo(props.tableRow,[props.tableRow]);\r\n    const [batch , setBatch] = useState(\"ALL\")\r\n    const newdata = []\r\n    for (const key in tableRow){\r\n        if (key !== 'name'){\r\n\r\n            newdata.push(key)\r\n        }\r\n    }\r\n    const selectChangeHandler = (event) =>{\r\n        setBatch(event.target.value);\r\n    }\r\n    return <tr>\r\n        <td>{tableRow.name}</td>\r\n        <td>\r\n            <select style={{width:'90px' ,padding:'3px' , background:'lightgrey'}} onChange={selectChangeHandler} value={batch} >\r\n                {newdata.map(data => <option key={Math.random()}>{data}</option>)}\r\n            </select>\r\n            \r\n            </td>\r\n        <td>{tableRow[batch]['stock']}</td>\r\n        <td>{tableRow[batch]['deal']}</td>\r\n        <td>{tableRow[batch]['free']}</td>\r\n        <td>{tableRow[batch]['mrp']}</td>\r\n        <td>{tableRow[batch]['rate']}</td>\r\n        <td>{tableRow[batch]['exp']}</td>\r\n        \r\n    </tr>\r\n}\r\nexport default TableRow;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAiC,OAAjC;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;EAAA;;EACvB,MAAMC,QAAQ,GAAEH,OAAO,CAACE,KAAK,CAACC,QAAP,EAAgB,CAACD,KAAK,CAACC,QAAP,CAAhB,CAAvB;EACA,MAAM,CAACC,KAAD,EAASC,QAAT,IAAqBN,QAAQ,CAAC,KAAD,CAAnC;EACA,MAAMO,OAAO,GAAG,EAAhB;;EACA,KAAK,MAAMC,GAAX,IAAkBJ,QAAlB,EAA2B;IACvB,IAAII,GAAG,KAAK,MAAZ,EAAmB;MAEfD,OAAO,CAACE,IAAR,CAAaD,GAAb;IACH;EACJ;;EACD,MAAME,mBAAmB,GAAIC,KAAD,IAAU;IAClCL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACH,CAFD;;EAGA,oBAAO;IAAA,wBACH;MAAA,UAAKT,QAAQ,CAACU;IAAd;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAA,uBACI;QAAQ,KAAK,EAAE;UAACC,KAAK,EAAC,MAAP;UAAeC,OAAO,EAAC,KAAvB;UAA+BC,UAAU,EAAC;QAA1C,CAAf;QAAuE,QAAQ,EAAEP,mBAAjF;QAAsG,KAAK,EAAEL,KAA7G;QAAA,UACKE,OAAO,CAACW,GAAR,CAAYC,IAAI,iBAAI;UAAA,UAA6BA;QAA7B,GAAaC,IAAI,CAACC,MAAL,EAAb;UAAA;UAAA;UAAA;QAAA,QAApB;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFG,eAQH;MAAA,UAAKjB,QAAQ,CAACC,KAAD,CAAR,CAAgB,OAAhB;IAAL;MAAA;MAAA;MAAA;IAAA,QARG,eASH;MAAA,UAAKD,QAAQ,CAACC,KAAD,CAAR,CAAgB,MAAhB;IAAL;MAAA;MAAA;MAAA;IAAA,QATG,eAUH;MAAA,UAAKD,QAAQ,CAACC,KAAD,CAAR,CAAgB,MAAhB;IAAL;MAAA;MAAA;MAAA;IAAA,QAVG,eAWH;MAAA,UAAKD,QAAQ,CAACC,KAAD,CAAR,CAAgB,KAAhB;IAAL;MAAA;MAAA;MAAA;IAAA,QAXG,eAYH;MAAA,UAAKD,QAAQ,CAACC,KAAD,CAAR,CAAgB,MAAhB;IAAL;MAAA;MAAA;MAAA;IAAA,QAZG,eAaH;MAAA,UAAKD,QAAQ,CAACC,KAAD,CAAR,CAAgB,KAAhB;IAAL;MAAA;MAAA;MAAA;IAAA,QAbG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAgBH,CA7BD;;GAAMH,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}