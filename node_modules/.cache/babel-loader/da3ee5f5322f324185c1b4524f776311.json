{"ast":null,"code":"var _jsxFileName = \"C:\\\\React projects\\\\ASSIGNMENT\\\\01-starting-setup\\\\src\\\\components\\\\FileData.js\";\nimport InventoryTable from \"./InventoryTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileData = props => {\n  let itemFile = props.file;\n  let updatedFile = {};\n\n  for (const record of itemFile) {\n    // console.log(record,record['name'],updatedFile)\n    let val = String(record['name']); // console.log(val,updatedFile,\"outside if\")\n\n    if (updatedFile.val) {\n      updatedFile.val.batch.push(record.batch);\n      updatedFile.val.stock += record.stock;\n\n      if (record.free * (1.0 / record.deal) < updatedFile.val.free * (1.0 / updatedFile.val.deal)) {\n        updatedFile.val.free = record.free;\n        updatedFile.val.deal = record.deal;\n      }\n\n      if (updatedFile.val.exp.getTime() > record.exp.getTime()) {\n        updatedFile.val.exp = record.exp;\n      }\n\n      if (updatedFile.val.mrp < record.mrp) {\n        updatedFile.val.mrp = record.mrp;\n      }\n\n      if (updatedFile.val.rate < record.rate) {\n        updatedFile.val.rate = record.rate;\n      }\n    } else {\n      let obj = {};\n      obj[val] = {\n        batch: [record['batch']],\n        stock: record[\"stock\"],\n        deal: record[\"deal\"],\n        free: record[\"free\"],\n        mrp: record[\"mrp\"],\n        rate: record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      let newupdatedFile = { ...obj,\n        ...updatedFile\n      }; // console.log(val,newupdatedFile);\n\n      updatedFile = { ...newupdatedFile\n      };\n    }\n  }\n\n  ;\n  console.log(updatedFile);\n  return /*#__PURE__*/_jsxDEV(InventoryTable, {\n    table: updatedFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_c = FileData;\nexport default FileData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileData\");","map":{"version":3,"names":["InventoryTable","FileData","props","itemFile","file","updatedFile","record","val","String","batch","push","stock","free","deal","exp","getTime","mrp","rate","obj","newupdatedFile","console","log"],"sources":["C:/React projects/ASSIGNMENT/01-starting-setup/src/components/FileData.js"],"sourcesContent":["import InventoryTable from \"./InventoryTable\";\r\nconst FileData = (props) =>{\r\n    let itemFile = props.file;\r\n    let updatedFile = {}\r\n    for (const record of itemFile){\r\n        // console.log(record,record['name'],updatedFile)\r\n        let val = String(record['name'])\r\n        // console.log(val,updatedFile,\"outside if\")\r\n        if (updatedFile.val){\r\n            updatedFile.val.batch.push(record.batch)\r\n            updatedFile.val.stock +=record.stock\r\n            if ((record.free*(1.0/record.deal)) < ( updatedFile.val.free * (1.0/updatedFile.val.deal))){\r\n\r\n                updatedFile.val.free = record.free\r\n                updatedFile.val.deal = record.deal\r\n            }\r\n            if (updatedFile.val.exp.getTime() > record.exp.getTime()){\r\n                updatedFile.val.exp = record.exp\r\n            }\r\n            if (updatedFile.val.mrp < record.mrp) {\r\n                updatedFile.val.mrp = record.mrp\r\n            }\r\n            if (updatedFile.val.rate < record.rate){\r\n                updatedFile.val.rate = record.rate\r\n            }\r\n        }\r\n        else{\r\n        \r\n        let obj={}\r\n        obj[val]={\r\n            batch:[record['batch']],\r\n            stock:record[\"stock\"],\r\n            deal:record[\"deal\"],\r\n            free:record[\"free\"],\r\n            mrp:record[\"mrp\"],\r\n            rate:record[\"rate\"],\r\n            exp:record[\"exp\"]}\r\n        let newupdatedFile ={ ...obj,\r\n                ...updatedFile\r\n        }\r\n        // console.log(val,newupdatedFile);\r\n        updatedFile= {...newupdatedFile};\r\n\r\n         }\r\n       \r\n    };\r\n    console.log(updatedFile)\r\n    return <InventoryTable  table={updatedFile} />;\r\n}\r\n\r\nexport default FileData;"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,kBAA3B;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,IAArB;EACA,IAAIC,WAAW,GAAG,EAAlB;;EACA,KAAK,MAAMC,MAAX,IAAqBH,QAArB,EAA8B;IAC1B;IACA,IAAII,GAAG,GAAGC,MAAM,CAACF,MAAM,CAAC,MAAD,CAAP,CAAhB,CAF0B,CAG1B;;IACA,IAAID,WAAW,CAACE,GAAhB,EAAoB;MAChBF,WAAW,CAACE,GAAZ,CAAgBE,KAAhB,CAAsBC,IAAtB,CAA2BJ,MAAM,CAACG,KAAlC;MACAJ,WAAW,CAACE,GAAZ,CAAgBI,KAAhB,IAAwBL,MAAM,CAACK,KAA/B;;MACA,IAAKL,MAAM,CAACM,IAAP,IAAa,MAAIN,MAAM,CAACO,IAAxB,CAAD,GAAoCR,WAAW,CAACE,GAAZ,CAAgBK,IAAhB,IAAwB,MAAIP,WAAW,CAACE,GAAZ,CAAgBM,IAA5C,CAAxC,EAA2F;QAEvFR,WAAW,CAACE,GAAZ,CAAgBK,IAAhB,GAAuBN,MAAM,CAACM,IAA9B;QACAP,WAAW,CAACE,GAAZ,CAAgBM,IAAhB,GAAuBP,MAAM,CAACO,IAA9B;MACH;;MACD,IAAIR,WAAW,CAACE,GAAZ,CAAgBO,GAAhB,CAAoBC,OAApB,KAAgCT,MAAM,CAACQ,GAAP,CAAWC,OAAX,EAApC,EAAyD;QACrDV,WAAW,CAACE,GAAZ,CAAgBO,GAAhB,GAAsBR,MAAM,CAACQ,GAA7B;MACH;;MACD,IAAIT,WAAW,CAACE,GAAZ,CAAgBS,GAAhB,GAAsBV,MAAM,CAACU,GAAjC,EAAsC;QAClCX,WAAW,CAACE,GAAZ,CAAgBS,GAAhB,GAAsBV,MAAM,CAACU,GAA7B;MACH;;MACD,IAAIX,WAAW,CAACE,GAAZ,CAAgBU,IAAhB,GAAuBX,MAAM,CAACW,IAAlC,EAAuC;QACnCZ,WAAW,CAACE,GAAZ,CAAgBU,IAAhB,GAAuBX,MAAM,CAACW,IAA9B;MACH;IACJ,CAjBD,MAkBI;MAEJ,IAAIC,GAAG,GAAC,EAAR;MACAA,GAAG,CAACX,GAAD,CAAH,GAAS;QACLE,KAAK,EAAC,CAACH,MAAM,CAAC,OAAD,CAAP,CADD;QAELK,KAAK,EAACL,MAAM,CAAC,OAAD,CAFP;QAGLO,IAAI,EAACP,MAAM,CAAC,MAAD,CAHN;QAILM,IAAI,EAACN,MAAM,CAAC,MAAD,CAJN;QAKLU,GAAG,EAACV,MAAM,CAAC,KAAD,CALL;QAMLW,IAAI,EAACX,MAAM,CAAC,MAAD,CANN;QAOLQ,GAAG,EAACR,MAAM,CAAC,KAAD;MAPL,CAAT;MAQA,IAAIa,cAAc,GAAE,EAAE,GAAGD,GAAL;QACZ,GAAGb;MADS,CAApB,CAXI,CAcJ;;MACAA,WAAW,GAAE,EAAC,GAAGc;MAAJ,CAAb;IAEE;EAEL;;EAAA;EACDC,OAAO,CAACC,GAAR,CAAYhB,WAAZ;EACA,oBAAO,QAAC,cAAD;IAAiB,KAAK,EAAEA;EAAxB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CA/CD;;KAAMJ,Q;AAiDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}