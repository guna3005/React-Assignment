{"ast":null,"code":"var _jsxFileName = \"C:\\\\React projects\\\\ASSIGNMENT\\\\01-starting-setup\\\\src\\\\components\\\\FileData.js\";\nimport InventoryTable from \"./InventoryTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileData = props => {\n  let itemFile = props.file;\n  let updatedFile = {};\n\n  for (const record of itemFile) {\n    // console.log(record,record['name'],updatedFile)\n    let val = record['name'].toString(); // console.log(val,updatedFile[val],updatedFile,\"outside if\")\n\n    if (updatedFile[val]) {\n      // console.log(updatedFile[val],updatedFile[val]['batch'])\n      updatedFile[val]['batch'].push(record['batch']); // console.log(updatedFile[val],updatedFile[val]['batch'])\n\n      updatedFile[val]['stock'] += +record['stock'];\n\n      if (record['free'] * (1.0 / record['deal']) < updatedFile[val]['free'] * (1.0 / updatedFile[val]['deal'])) {\n        updatedFile[val]['free'] = record['free'];\n        updatedFile[val]['deal'] = record['deal'];\n      }\n\n      let d1 = new Date(updatedFile[val]['exp']);\n      let d2 = new Date(record['exp']); // console.log(d1,d2)\n\n      if (d1.getTime() > d2.getTime()) {\n        updatedFile[val]['exp'] = record['exp'];\n      }\n\n      if (updatedFile[val]['mrp'] < record['mrp']) {\n        updatedFile[val]['mrp'] = record['mrp'];\n      }\n\n      if (updatedFile[val]['rate'] < record['rate']) {\n        updatedFile[val]['rate'] = record['rate'];\n      }\n    } else {\n      let obj = {};\n      obj[record['batch']] = {\n        stock: +record[\"stock\"],\n        deal: +record[\"deal\"],\n        free: +record[\"free\"],\n        mrp: +record[\"mrp\"],\n        rate: +record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      obj['ALL'] = {\n        stock: +record[\"stock\"],\n        deal: +record[\"deal\"],\n        free: +record[\"free\"],\n        mrp: +record[\"mrp\"],\n        rate: +record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      let newobj = {};\n      newobj[val] = { ...obj\n      };\n      let newupdatedFile = { ...updatedFile,\n        ...newobj\n      }; // console.log(val,newupdatedFile);\n\n      updatedFile = { ...newupdatedFile\n      };\n      console.log(updatedFile);\n    }\n  }\n\n  ;\n  console.log(updatedFile);\n  const newupdatedFile = [];\n\n  for (const key in updatedFile) {\n    newupdatedFile.push({\n      name: key,\n      ...updatedFile[key]\n    });\n  }\n\n  console.log(newupdatedFile);\n  return /*#__PURE__*/_jsxDEV(InventoryTable, {\n    table: newupdatedFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_c = FileData;\nexport default FileData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileData\");","map":{"version":3,"names":["InventoryTable","FileData","props","itemFile","file","updatedFile","record","val","toString","push","d1","Date","d2","getTime","obj","stock","deal","free","mrp","rate","exp","newobj","newupdatedFile","console","log","key","name"],"sources":["C:/React projects/ASSIGNMENT/01-starting-setup/src/components/FileData.js"],"sourcesContent":["import InventoryTable from \"./InventoryTable\";\r\nconst FileData = (props) =>{\r\n    let itemFile = props.file;\r\n    let updatedFile = {}\r\n    for (const record of itemFile){\r\n        // console.log(record,record['name'],updatedFile)\r\n        let val = record['name'].toString()\r\n        // console.log(val,updatedFile[val],updatedFile,\"outside if\")\r\n        if (updatedFile[val]){\r\n            // console.log(updatedFile[val],updatedFile[val]['batch'])\r\n            updatedFile[val]['batch'].push(record['batch'])\r\n            // console.log(updatedFile[val],updatedFile[val]['batch'])\r\n            updatedFile[val]['stock'] +=+record['stock']\r\n            if ((record['free']*(1.0/record['deal'])) < ( updatedFile[val]['free'] * (1.0/updatedFile[val]['deal']))){\r\n\r\n                updatedFile[val]['free'] = record['free']\r\n                updatedFile[val]['deal'] = record['deal']\r\n            }\r\n            let d1= new Date(updatedFile[val]['exp'])\r\n            let d2= new Date(record['exp'])\r\n            // console.log(d1,d2)\r\n            if (d1.getTime() > d2.getTime()){\r\n                updatedFile[val]['exp'] = record['exp']\r\n            }\r\n            if (updatedFile[val]['mrp'] < record['mrp']) {\r\n                updatedFile[val]['mrp'] = record['mrp']\r\n            }\r\n            if (updatedFile[val]['rate'] < record['rate']){\r\n                updatedFile[val]['rate'] = record['rate']\r\n            }\r\n        }\r\n        else{\r\n        \r\n        let obj={}\r\n        obj[record['batch']]= {stock:+record[\"stock\"],\r\n        deal:+record[\"deal\"],\r\n        free:+record[\"free\"],\r\n        mrp:+record[\"mrp\"],\r\n        rate:+record[\"rate\"],\r\n        exp:record[\"exp\"]}\r\n        obj['ALL'] = {stock:+record[\"stock\"],\r\n        deal:+record[\"deal\"],\r\n        free:+record[\"free\"],\r\n        mrp:+record[\"mrp\"],\r\n        rate:+record[\"rate\"],\r\n        exp:record[\"exp\"]}\r\n        let newobj={}\r\n        newobj[val]= {...obj}\r\n        let newupdatedFile ={...updatedFile, ...newobj}\r\n        // console.log(val,newupdatedFile);\r\n        updatedFile= {...newupdatedFile};\r\n        console.log(updatedFile)\r\n         }\r\n       \r\n    };\r\n    console.log(updatedFile)\r\n    const newupdatedFile = []\r\n    for (const key in updatedFile){\r\n        newupdatedFile.push({name:key,...updatedFile[key]})\r\n    }\r\n    console.log(newupdatedFile)\r\n    return <InventoryTable  table={newupdatedFile} />;\r\n}\r\n\r\nexport default FileData;"],"mappings":"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"},"metadata":{},"sourceType":"module"}