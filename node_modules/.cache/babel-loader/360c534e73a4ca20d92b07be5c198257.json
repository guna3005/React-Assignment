{"ast":null,"code":"var _jsxFileName = \"C:\\\\React projects\\\\ASSIGNMENT\\\\01-starting-setup\\\\src\\\\components\\\\FileData.js\";\nimport InventoryTable from \"./InventoryTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileData = props => {\n  let itemFile = props.file;\n  let updatedFile = {};\n\n  for (const record of itemFile) {\n    // console.log(record,record['name'],updatedFile)\n    let val = record['name'].toString(); // console.log(val,updatedFile,\"outside if\")\n\n    if (updatedFile.val) {// console.log(updatedFile.val,val,'in if')\n    } else {\n      let val = String(record['name']);\n      let obj = {};\n      obj[val] = {\n        batch: [record['batch']],\n        stock: record[\"stock\"],\n        deal: record[\"deal\"],\n        free: record[\"free\"],\n        mrp: record[\"mrp\"],\n        rate: record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      let newupdatedFile = { ...obj,\n        ...updatedFile\n      }; // console.log(val,newupdatedFile);\n\n      updatedFile = { ...newupdatedFile\n      };\n    }\n  }\n\n  ;\n  console.log(updatedFile);\n  return /*#__PURE__*/_jsxDEV(InventoryTable, {\n    table: updatedFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_c = FileData;\nexport default FileData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileData\");","map":{"version":3,"names":["InventoryTable","FileData","props","itemFile","file","updatedFile","record","val","toString","String","obj","batch","stock","deal","free","mrp","rate","exp","newupdatedFile","console","log"],"sources":["C:/React projects/ASSIGNMENT/01-starting-setup/src/components/FileData.js"],"sourcesContent":["import InventoryTable from \"./InventoryTable\";\r\nconst FileData = (props) =>{\r\n    let itemFile = props.file;\r\n    let updatedFile = {}\r\n    for (const record of itemFile){\r\n        // console.log(record,record['name'],updatedFile)\r\n        let val=record['name'].toString()\r\n        // console.log(val,updatedFile,\"outside if\")\r\n        if (updatedFile.val){\r\n            // console.log(updatedFile.val,val,'in if')\r\n        }\r\n        else{\r\n        let val = String(record['name'])\r\n        let obj={}\r\n        obj[val]={\r\n            batch:[record['batch']],\r\n            stock:record[\"stock\"],\r\n            deal:record[\"deal\"],\r\n            free:record[\"free\"],\r\n            mrp:record[\"mrp\"],\r\n            rate:record[\"rate\"],\r\n            exp:record[\"exp\"]}\r\n        let newupdatedFile ={ ...obj,\r\n                ...updatedFile\r\n        }\r\n        // console.log(val,newupdatedFile);\r\n        updatedFile= {...newupdatedFile};\r\n\r\n         }\r\n       \r\n    };\r\n    console.log(updatedFile)\r\n    return <InventoryTable  table={updatedFile} />;\r\n}\r\n\r\nexport default FileData;"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,kBAA3B;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,IAArB;EACA,IAAIC,WAAW,GAAG,EAAlB;;EACA,KAAK,MAAMC,MAAX,IAAqBH,QAArB,EAA8B;IAC1B;IACA,IAAII,GAAG,GAACD,MAAM,CAAC,MAAD,CAAN,CAAeE,QAAf,EAAR,CAF0B,CAG1B;;IACA,IAAIH,WAAW,CAACE,GAAhB,EAAoB,CAChB;IACH,CAFD,MAGI;MACJ,IAAIA,GAAG,GAAGE,MAAM,CAACH,MAAM,CAAC,MAAD,CAAP,CAAhB;MACA,IAAII,GAAG,GAAC,EAAR;MACAA,GAAG,CAACH,GAAD,CAAH,GAAS;QACLI,KAAK,EAAC,CAACL,MAAM,CAAC,OAAD,CAAP,CADD;QAELM,KAAK,EAACN,MAAM,CAAC,OAAD,CAFP;QAGLO,IAAI,EAACP,MAAM,CAAC,MAAD,CAHN;QAILQ,IAAI,EAACR,MAAM,CAAC,MAAD,CAJN;QAKLS,GAAG,EAACT,MAAM,CAAC,KAAD,CALL;QAMLU,IAAI,EAACV,MAAM,CAAC,MAAD,CANN;QAOLW,GAAG,EAACX,MAAM,CAAC,KAAD;MAPL,CAAT;MAQA,IAAIY,cAAc,GAAE,EAAE,GAAGR,GAAL;QACZ,GAAGL;MADS,CAApB,CAXI,CAcJ;;MACAA,WAAW,GAAE,EAAC,GAAGa;MAAJ,CAAb;IAEE;EAEL;;EAAA;EACDC,OAAO,CAACC,GAAR,CAAYf,WAAZ;EACA,oBAAO,QAAC,cAAD;IAAiB,KAAK,EAAEA;EAAxB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAhCD;;KAAMJ,Q;AAkCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}