{"ast":null,"code":"var _jsxFileName = \"C:\\\\React projects\\\\ASSIGNMENT\\\\01-starting-setup\\\\src\\\\components\\\\FileData.js\";\nimport InventoryTable from \"./InventoryTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileData = props => {\n  let itemFile = props.file;\n  let updatedFile = {};\n\n  for (const record of itemFile) {\n    let val = record[\"name\"].toString();\n\n    if (updatedFile[val]) {\n      console.log(updatedFile[val], \"before\", record);\n      let obj = {};\n      obj[record[\"batch\"]] = {\n        stock: +record[\"stock\"],\n        deal: +record[\"deal\"],\n        free: +record[\"free\"],\n        mrp: +record[\"mrp\"],\n        rate: +record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      updatedFile[val][\"ALL\"][\"stock\"] += +record[\"stock\"];\n\n      if (record[\"free\"] * (1.0 / record[\"deal\"]) < updatedFile[val][\"ALL\"][\"free\"] * (1.0 / updatedFile[val][\"ALL\"][\"deal\"])) {\n        updatedFile[val][\"ALL\"][\"free\"] = record[\"free\"];\n        updatedFile[val][\"ALL\"][\"deal\"] = record[\"deal\"];\n      }\n\n      let d1 = new Date(updatedFile[val][\"ALL\"][\"exp\"]);\n      let d2 = new Date(record[\"exp\"]);\n\n      if (d1.getTime() > d2.getTime()) {\n        updatedFile[val][\"ALL\"][\"exp\"] = record[\"exp\"];\n      }\n\n      if (updatedFile[val][\"ALL\"][\"mrp\"] < record[\"mrp\"]) {\n        updatedFile[val][\"ALL\"][\"mrp\"] = record[\"mrp\"];\n      }\n\n      if (updatedFile[val][\"ALL\"][\"rate\"] < record[\"rate\"]) {\n        updatedFile[val][\"ALL\"][\"rate\"] = +record[\"rate\"];\n      }\n\n      updatedFile[val] = { ...updatedFile[val],\n        ...obj\n      };\n      console.log(updatedFile[val], record[val], \"after\");\n    } else {\n      let obj = {};\n      obj[\"ALL\"] = {\n        stock: +record[\"stock\"],\n        deal: +record[\"deal\"],\n        free: +record[\"free\"],\n        mrp: +record[\"mrp\"],\n        rate: +record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      obj[record[\"batch\"]] = {\n        stock: +record[\"stock\"],\n        deal: +record[\"deal\"],\n        free: +record[\"free\"],\n        mrp: +record[\"mrp\"],\n        rate: +record[\"rate\"],\n        exp: record[\"exp\"]\n      };\n      let newobj = {};\n      newobj[val] = { ...obj\n      };\n      console.log(newobj);\n      let newupdatedFile = { ...updatedFile,\n        ...newobj\n      };\n      updatedFile = { ...newupdatedFile\n      };\n    }\n  }\n\n  const newupdatedFile = [];\n\n  for (const key in updatedFile) {\n    newupdatedFile.push({\n      name: key,\n      ...updatedFile[key]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(InventoryTable, {\n    maintable: newupdatedFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n\n_c = FileData;\nexport default FileData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileData\");","map":{"version":3,"names":["InventoryTable","FileData","props","itemFile","file","updatedFile","record","val","toString","console","log","obj","stock","deal","free","mrp","rate","exp","d1","Date","d2","getTime","newobj","newupdatedFile","key","push","name"],"sources":["C:/React projects/ASSIGNMENT/01-starting-setup/src/components/FileData.js"],"sourcesContent":["import InventoryTable from \"./InventoryTable\";\r\nconst FileData = (props) => {\r\n  let itemFile = props.file;\r\n  let updatedFile = {};\r\n  for (const record of itemFile) {\r\n    let val = record[\"name\"].toString();\r\n    if (updatedFile[val]) {\r\n      console.log(updatedFile[val],\"before\",record)\r\n      let obj = {};\r\n      obj[record[\"batch\"]] = {\r\n        stock: +record[\"stock\"],\r\n        deal: +record[\"deal\"],\r\n        free: +record[\"free\"],\r\n        mrp: +record[\"mrp\"],\r\n        rate: +record[\"rate\"],\r\n        exp: record[\"exp\"],\r\n      };\r\n      updatedFile[val][\"ALL\"][\"stock\"] += +record[\"stock\"];\r\n      if (\r\n        record[\"free\"] * (1.0 / record[\"deal\"]) <\r\n        updatedFile[val][\"ALL\"][\"free\"] *\r\n          (1.0 / updatedFile[val][\"ALL\"][\"deal\"])\r\n      ) {\r\n        updatedFile[val][\"ALL\"][\"free\"] = record[\"free\"];\r\n        updatedFile[val][\"ALL\"][\"deal\"] = record[\"deal\"];\r\n      }\r\n      let d1 = new Date(updatedFile[val][\"ALL\"][\"exp\"]);\r\n      let d2 = new Date(record[\"exp\"]);\r\n      if (d1.getTime() > d2.getTime()) {\r\n        updatedFile[val][\"ALL\"][\"exp\"] = record[\"exp\"];\r\n      }\r\n      if (updatedFile[val][\"ALL\"][\"mrp\"] < record[\"mrp\"]) {\r\n        updatedFile[val][\"ALL\"][\"mrp\"] = record[\"mrp\"];\r\n      }\r\n      if (updatedFile[val][\"ALL\"][\"rate\"] < record[\"rate\"]) {\r\n        updatedFile[val][\"ALL\"][\"rate\"] = +record[\"rate\"];\r\n      }\r\n      updatedFile[val] = { ...updatedFile[val], ...obj };\r\n      console.log(updatedFile[val],record[val],\"after\")\r\n    } else {\r\n      let obj = {};\r\n      obj[\"ALL\"] = {\r\n        stock: +record[\"stock\"],\r\n        deal: +record[\"deal\"],\r\n        free: +record[\"free\"],\r\n        mrp: +record[\"mrp\"],\r\n        rate: +record[\"rate\"],\r\n        exp: record[\"exp\"],\r\n      };\r\n      obj[record[\"batch\"]] = {\r\n        stock: +record[\"stock\"],\r\n        deal: +record[\"deal\"],\r\n        free: +record[\"free\"],\r\n        mrp: +record[\"mrp\"],\r\n        rate: +record[\"rate\"],\r\n        exp: record[\"exp\"],\r\n      };\r\n\r\n      let newobj = {};\r\n      newobj[val] = { ...obj };\r\n      console.log(newobj)\r\n      let newupdatedFile = { ...updatedFile, ...newobj };\r\n      updatedFile = { ...newupdatedFile };\r\n    }\r\n  }\r\n  const newupdatedFile = [];\r\n  for (const key in updatedFile) {\r\n    newupdatedFile.push({ name: key, ...updatedFile[key] });\r\n  }\r\n  return <InventoryTable maintable={newupdatedFile} />;\r\n};\r\n\r\nexport default FileData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}